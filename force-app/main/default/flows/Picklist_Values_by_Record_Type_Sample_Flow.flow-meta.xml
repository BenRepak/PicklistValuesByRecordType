<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <description>A sample flow that shows how to use a custom LWC component to display picklist values based on record type. This flow uses the Account object and Industry field.</description>
    <dynamicChoiceSets>
        <name>picklistChoiceSetIndustry</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Industry</picklistField>
        <picklistObject>Account</picklistObject>
    </dynamicChoiceSets>
    <interviewLabel>Picklist Values by Record Type Sample Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Picklist Values by Record Type Sample Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <description>Get account with matching id from first screen.</description>
        <name>Get_Account</name>
        <label>Get Account</label>
        <locationX>517</locationX>
        <locationY>106</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Record_Type</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Account_Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Record_Type</name>
        <label>Get Record Type</label>
        <locationX>671</locationX>
        <locationY>114</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Display_Account_and_Industry_Picklist</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Account.RecordTypeId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>Display_Account_and_Industry_Picklist</name>
        <label>Display Account and Industry Picklist</label>
        <locationX>811</locationX>
        <locationY>116</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Display_Account_and_Industry_Picklist_0</targetReference>
        </connector>
        <fields>
            <name>displayAccountDetails</name>
            <fieldText>&lt;p&gt;The account associated with&lt;b&gt; {!Account_Id} &lt;/b&gt;is named &lt;b&gt;{!Get_Account.Name} &lt;/b&gt;and is of &lt;b&gt;{!Get_Record_Type.Name}&lt;/b&gt; record type.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>displayAction</name>
            <fieldText>&lt;p&gt;Change the picklist below to conditionally render display text elements. &lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Flow_Picklist</name>
            <choiceReferences>picklistChoiceSetIndustry</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Industry Picklist Choice Set From Flow</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>GetIndustryByRecordType</name>
            <extensionName>c:picklistValuesByRecordType</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>Industry</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objApiName</name>
                <value>
                    <stringValue>Account</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>isRequired</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recTypeId</name>
                <value>
                    <elementReference>Get_Account.RecordTypeId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>fieldLabel</name>
                <value>
                    <stringValue>Industry</stringValue>
                </value>
            </inputParameters>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>displayAgriculture</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Display this conditionally if industry is Agriculture.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetIndustryByRecordType.outputValue</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Agriculture</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>displayBanking</name>
            <fieldText>&lt;p&gt;Display this conditionally if industry is Banking.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetIndustryByRecordType.outputValue</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Banking</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>displayElse</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Display this conditionally if industry anything but Banking or Agriculture&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>GetIndustryByRecordType.outputValue</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue/>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetIndustryByRecordType.outputValue</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Agriculture</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>GetIndustryByRecordType.outputValue</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Banking</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Display_Account_and_Industry_Picklist_0</name>
        <label>Display Account and Industry Picklist</label>
        <locationX>995</locationX>
        <locationY>129</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>displaySelectedPicklistValue</name>
            <fieldText>&lt;p&gt;The account associated with&lt;b&gt; {!Account_Id} &lt;/b&gt;is named &lt;b&gt;{!Get_Account.Name} &lt;/b&gt;and is of &lt;b&gt;{!Get_Record_Type.Name}&lt;/b&gt; record type.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>displaySelectedIndustryValue_0</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;The value selected in the picklist is: {!GetIndustryByRecordType.outputValue}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Select_Account_Record</name>
        <label>Select Account Record</label>
        <locationX>347</locationX>
        <locationY>108</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Get_Account</targetReference>
        </connector>
        <fields>
            <name>Account_Id</name>
            <dataType>String</dataType>
            <fieldText>Account Id</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;Enter a 15 or 18-digit Salesforce Id for an Account record. &lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>105</locationX>
        <locationY>101</locationY>
        <connector>
            <targetReference>Select_Account_Record</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <name>outputValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>selectedIndustryValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>varBool</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
